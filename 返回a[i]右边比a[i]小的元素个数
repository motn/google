给定数组 a = {4， 2， 1， 3}
返回数组 b : b[i] = a[j]个数，such that a[j] < a[i] while j > i
要求： nlogn时间

用binary indexed tree 树状数组来做

--------------以下代码---------------------
public class Test {//用 binary indexed tree， nlogn时间， n空间
	//如果不用b来copy数组a的值，那么MaxVal设置大点，1000，然后update里<MaxVal+5最好
    static int MaxVal;
    static int[] tree;
    public static void main(String[] args) {
        int[] a ={20, 11, 32, 2, 7, 7, 9, 1, 7};
        int len = a.length;
        int[] b = new int[len];
        for(int i = 0; i < len; i++) {
        	b[i] = a[i];
        }
        Arrays.sort(b);
        for(int i = 0; i < len; i++) {
        	a[i] = Arrays.binarySearch(b, a[i]) + 1;
        }
        int s = 0;
        MaxVal = len + 1;
        tree = new int[MaxVal + 1];
        int[] res = new int[MaxVal];
        res[len] = 0;
        for(int i = len - 1; i >= 0; i--) {
        	if(a[i] != 0) {
        		update(a[i], 1);
        		res[i] = read(a[i] - 1) + s;
        	} else {
        		s++;
        	}
        }
        for(int i = 0; i < len; i++) {
        	System.out.println(res[i]);
        }
    }

    public static void update(int idx, int val){
        while(idx <= MaxVal){
            tree[idx] += val;
            idx += (idx & -idx);
        }
    }

    public static int read(int idx){
        int sum = 0;
        while(idx > 0){
            sum += tree[idx];
            idx -= (idx & -idx);
        }
        return sum;
    }
}
